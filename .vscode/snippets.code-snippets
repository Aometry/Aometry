{
	// Place your Aometry workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
		
			"slashcommand": {
				"prefix": "scmd",
				"body": [
				  "const { CommandInteraction, MessageEmbed } = require('discord.js')",
				  "",
				  "module.exports = {",
				  "    name: \"${1:command name}\",",
				  "    description: \"${2:command description}\",",
				  "    /**",
				  "     * ",
				  "     * @param {CommandInteraction} interaction ",
				  "     */",
				  "    async execute(interaction) {",
				  "        $0",
				  "    }",
				  "}"
				],
				"description": "slashcommand"
			  }, 
			  "prefix": {
				"prefix": "pcmd",
				"body": [
				  "const { Message, MessageEmbed } = require('discord.js')",
				  "",
				  "module.exports = {",
				  "    name: \"${1:command name}\",",
				  "    description: \"${2:command description}\",",
				  "    /**",
				  "     * ",
				  "     * @param {Message} message ",
				  "     */",
				  "    async execute(message, args, commandName, client) {",
				  "        $0",
				  "    }",
				  "}"
				],
				"description": "prefixcmd"
			  }
		}
